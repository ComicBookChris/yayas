{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\pages\\\\auth\\\\RegisterComplete.js\";\nimport React, { useState, useEffect } from 'react';\nimport { auth } from '..//../firebase';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrUpdateUser } from '../../functions/auth';\n\nconst RegisterComplete = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  let dispatch = useDispatch();\n  /**useEffect will populate the email, within \r\n   * the const state about. \r\n   * 1st argument is an arrow function\r\n   * and 2nd argument is dependencies.\r\n   * This is known as a dependency array.\r\n   * At the moment it is empty by default.\r\n   *  As an example, [password] was inside \r\n   * brackets, when it changes,\r\n   * the function will run.\r\n    */\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem('emailForRegistration')); // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, [user, history]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // validation\n\n    if (!email || !password) {\n      toast.error('Email and password is required');\n      return;\n    }\n\n    if (password.length > 6) {\n      toast.error('Password must be at least 6 characters long');\n      return;\n    }\n\n    try {\n      /**signInWithEmailLink needs two arguments, email, because\r\n       * which email? and the 2nd argument is the entire url.\r\n       * To get this use window.location.href\r\n       */\n      const result = await auth.signInWithEmailLink(email, window.location.href); // console.log('RESULT', result)\n\n      if (result.user.emailVerified) {\n        //remove user email from the local storage\n        window.localStorage.removeItem('emailForRegistration'); //get user id token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); //redux store\n\n        console.log('user', user, 'idTokenResult', idTokenResult);\n        createOrUpdateUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }).catch(err => console.log(err)); //redirect\n\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password must contain no less then six characters\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Complete Registration\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Register Complete\"), completeRegistrationForm())));\n};\n\nexport default RegisterComplete;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useDispatch","useSelector","createOrUpdateUser","RegisterComplete","history","email","setEmail","password","setPassword","user","state","dispatch","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","console","log","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from '..//../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst RegisterComplete = ({history}) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    let dispatch = useDispatch();\r\n    \r\n    /**useEffect will populate the email, within \r\n     * the const state about. \r\n     * 1st argument is an arrow function\r\n     * and 2nd argument is dependencies.\r\n     * This is known as a dependency array.\r\n     * At the moment it is empty by default.\r\n     *  As an example, [password] was inside \r\n     * brackets, when it changes,\r\n     * the function will run.\r\n      */\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem('emailForRegistration'));\r\n        // console.log(window.location.href);\r\n        // console.log(window.localStorage.getItem(\"emailForRegistration\"));\r\n    }, [user, history])\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // validation\r\n        if(!email || !password) {\r\n            toast.error('Email and password is required');\r\n            return;\r\n        }\r\n        if(password.length > 6) {\r\n            toast.error('Password must be at least 6 characters long');\r\n            return;\r\n        }\r\n        try {\r\n            /**signInWithEmailLink needs two arguments, email, because\r\n             * which email? and the 2nd argument is the entire url.\r\n             * To get this use window.location.href\r\n             */\r\n            const result = await auth.signInWithEmailLink(\r\n                email, \r\n                window.location.href\r\n            );\r\n            // console.log('RESULT', result)\r\n            if(result.user.emailVerified) {\r\n                //remove user email from the local storage\r\n                window.localStorage.removeItem('emailForRegistration');\r\n                //get user id token\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password);\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                //redux store\r\n                console.log('user', user, 'idTokenResult', idTokenResult);\r\n\r\n                createOrUpdateUser(idTokenResult.token)\r\n                .then(\r\n                    res => {\r\n                        dispatch({\r\n                            type: \"LOGGED_IN_USER\",\r\n                            payload: {\r\n                                name: res.data.name,\r\n                                email: res.data.email,\r\n                                token: idTokenResult.token,\r\n                                role: res.data.role,\r\n                                _id: res.data._id,\r\n                            },\r\n                        });\r\n                    })\r\n                    .catch ((err) => console.log(err));\r\n\r\n                //redirect\r\n                history.push('/')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const completeRegistrationForm = () => \r\n    <form onSubmit={handleSubmit}>\r\n        <input \r\n        type=\"email\" \r\n        className=\"form-control\" \r\n        value={email} \r\n        disabled\r\n        />\r\n\r\n        <input \r\n        type=\"password\" \r\n        className=\"form-control\" \r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password must contain no less then six characters\"\r\n        autoFocus\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-raised\">\r\n        Complete Registration\r\n        </button>\r\n    </form>    \r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register Complete</h4>\r\n                    {completeRegistrationForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}