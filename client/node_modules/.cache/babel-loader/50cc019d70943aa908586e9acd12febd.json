{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\pages\\\\Shop.js\";\nimport React, { useState, useEffect } from 'react';\n/* To get all the products, and get the products by default, need\r\nto use a method called getProductsByCount. Which is already \r\naccessible though functions folder in product.js. There\r\ngetProductsByCount makes a request using an Axios call to an \r\nendpoint and give the value of how many are needed. */\n\nimport { getProductsByCount, fetchProductsByFilter } from \"../functions/product\";\n/* Access the Redux Store  */\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProductCard from '../components/cards/ProductCard';\nimport { Menu, Slider } from 'antd';\nconst {\n  SubMenu,\n  ItemGroup\n} = Menu;\n\nconst Shop = () => {\n  /* State variable to store products, useState will be an empty array. */\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [price, setPrice] = useState([0, 0]);\n  let {\n    search\n  } = useSelector(state => ({ ...state\n  }));\n  const {\n    text\n  } = search;\n  /* Need to show products when the user lands on this page. For this, \r\n  useEffect is used. Which will make a request to the getProductsByCount method\r\n  that is imported. which will be stored in the state which is the const [products, setProducts],\r\n  up above. Everything will be displayed utilizing map function in the return function below. */\n\n  useEffect(() => {\n    loadAllProducts();\n  }, []); //* 1. load products by default on page load.\n\n  const loadAllProducts = () => {\n    /* Using the method getProductsByCount declare how many is needed by the numeric value.\r\n    By default 12 will show. This is subject to change. then set response, in this case it is\r\n    p. setProducts to p.data, and setLoading to false. */\n    getProductsByCount(12).then(p => {\n      setProducts(p.data);\n      setLoading(false);\n    });\n  }; //*  2. load products on user search input\n\n\n  useEffect(() => {\n    /**This console.log only works on the Shop page. */\n    // console.log(\"load products on user search input\", text);\n    const delayed = setTimeout(() => {\n      fetchProducts({\n        query: text\n      });\n    }, 300);\n    return () => clearTimeout(delayed);\n  }, [text]);\n\n  const fetchProducts = arg => {\n    fetchProductsByFilter(arg).then(res => {\n      setProducts(res.data);\n    });\n  }; //* 3. load products based on price range\n\n  /* By this time the products should be in the state. So now return them.  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Search/Filter\"), /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Menu.SubMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    className: \"ml-4 mr-4\",\n    tipFormatter: v => `$${v}`,\n    range: true,\n    value: price,\n    onChange: value => setPrice(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 28\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }\n  }, \"Products\"), products.length < 1 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, \"No products found\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, products.map(p => /*#__PURE__*/React.createElement(\"div\", {\n    key: p._id,\n    className: \"col-md-4 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ProductCard, {\n    product: p,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default Shop;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/pages/Shop.js"],"names":["React","useState","useEffect","getProductsByCount","fetchProductsByFilter","useSelector","useDispatch","ProductCard","Menu","Slider","SubMenu","ItemGroup","Shop","products","setProducts","loading","setLoading","price","setPrice","search","state","text","loadAllProducts","then","p","data","delayed","setTimeout","fetchProducts","query","clearTimeout","arg","res","v","value","length","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n/* To get all the products, and get the products by default, need\r\nto use a method called getProductsByCount. Which is already \r\naccessible though functions folder in product.js. There\r\ngetProductsByCount makes a request using an Axios call to an \r\nendpoint and give the value of how many are needed. */\r\nimport {\r\n    getProductsByCount,\r\n    fetchProductsByFilter,\r\n  } from \"../functions/product\";\r\n/* Access the Redux Store  */\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProductCard from '../components/cards/ProductCard';\r\nimport {Menu, Slider} from 'antd';\r\n\r\nconst {SubMenu, ItemGroup} = Menu;\r\n\r\nconst Shop = () => {\r\n    /* State variable to store products, useState will be an empty array. */\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [price, setPrice] = useState([0, 0]);\r\n\r\n    let { search } = useSelector((state) => ({ ...state }));\r\n    const { text } = search;\r\n\r\n    /* Need to show products when the user lands on this page. For this, \r\n    useEffect is used. Which will make a request to the getProductsByCount method\r\n    that is imported. which will be stored in the state which is the const [products, setProducts],\r\n    up above. Everything will be displayed utilizing map function in the return function below. */\r\n    useEffect(() => {\r\n        loadAllProducts();\r\n    }, []);\r\n\r\n    //* 1. load products by default on page load.\r\n    const loadAllProducts = () => {\r\n        /* Using the method getProductsByCount declare how many is needed by the numeric value.\r\n        By default 12 will show. This is subject to change. then set response, in this case it is\r\n        p. setProducts to p.data, and setLoading to false. */\r\n        getProductsByCount(12).then((p) => {\r\n            setProducts(p.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    //*  2. load products on user search input\r\n    useEffect(() => {\r\n        /**This console.log only works on the Shop page. */\r\n        // console.log(\"load products on user search input\", text);\r\n        const delayed = setTimeout(() => {\r\n            fetchProducts({query: text});\r\n        }, 300);\r\n        return () => clearTimeout(delayed);\r\n    }, [text]);\r\n\r\n    const fetchProducts = (arg) => {\r\n        fetchProductsByFilter(arg).then((res) => {\r\n            setProducts(res.data);\r\n        });\r\n    };\r\n\r\n    //* 3. load products based on price range\r\n\r\n\r\n    /* By this time the products should be in the state. So now return them.  */\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                    <h4>Search/Filter</h4>\r\n                    <Menu>\r\n                        <Menu.SubMenu>\r\n                            <div>\r\n                                <Slider \r\n                                className='ml-4 mr-4' \r\n                                tipFormatter={(v) =>`$${v}`} \r\n                                range value={price} \r\n                                onChange={(value) => setPrice(value)}\r\n                                />\r\n                            </div>\r\n                        </Menu.SubMenu>\r\n                    </Menu>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    {/* If it is loading, the show Loading..., \r\n                    otherwise show Products.  */}\r\n                    {loading\r\n                        ? (<h4 className=\"text-danger\">Loading...</h4>)\r\n                        : (<h4 className=\"text-danger\">Products</h4>)\r\n                    }\r\n                    {/* If the length of the products is less then 1, \r\n                    show No products found */}\r\n                    {products.length < 1 && <p>No products found</p>}\r\n\r\n                    <div className=\"row pb-5\">\r\n                    {/* Each product must be shown in its own div. \r\n                    To accomplish this, use the map function */}\r\n                        {products.map((p) => (\r\n                            <div key={p._id} className=\"col-md-4 mt-3\">\r\n                            {/* Here is the ProductCard, and it must be passed the\r\n                            products as props, so product={p} */}\r\n                                <ProductCard product={p} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}