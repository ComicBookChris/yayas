{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\components\\\\forms\\\\FileUpload.js\";\nimport React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst FileUpload = ({\n  values,\n  setValues,\n  setLoading\n}) => {\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n\n  const fileUploadAndResize = e => {\n    // console.log(e.target.files);\n    // resize\n    let files = e.target.files; // 3\n\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      setLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, \"JPEG\", 100, 0, uri => {\n          // console.log(uri);\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              authtoken: user ? user.token : \"\"\n            }\n          }).then(res => {\n            console.log(\"IMAGE UPLOAD RES DATA\", res);\n            setLoading(false);\n            allUploadedFiles.push(res.data);\n            setValues({ ...values,\n              images: allUploadedFiles\n            });\n          }).catch(err => {\n            setLoading(false);\n            console.log(\"CLOUDINARY UPLOAD ERR\", err);\n          });\n        }, \"base64\");\n      }\n    } // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Choose File\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    accept: \"images/*\",\n    onChange: fileUploadAndResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/components/forms/FileUpload.js"],"names":["React","Resizer","axios","useSelector","FileUpload","values","setValues","setLoading","user","state","fileUploadAndResize","e","files","target","allUploadedFiles","images","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","authtoken","token","then","res","console","log","push","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA;AAArB,CAAD,KAAuC;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;;AAEA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AACjC;AACA;AACA,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB,CAHiC,CAGL;;AAC5B,QAAIE,gBAAgB,GAAGT,MAAM,CAACU,MAA9B;;AAEA,QAAIH,KAAJ,EAAW;AACTL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCf,QAAAA,OAAO,CAACiB,gBAAR,CACEN,KAAK,CAACI,CAAD,CADP,EAEE,GAFF,EAGE,GAHF,EAIE,MAJF,EAKE,GALF,EAME,CANF,EAOGG,GAAD,IAAS;AACP;AACAjB,UAAAA,KAAK,CACFkB,IADH,CAEK,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,eAFjC,EAGI;AAAEC,YAAAA,KAAK,EAAEL;AAAT,WAHJ,EAII;AACEM,YAAAA,OAAO,EAAE;AACPC,cAAAA,SAAS,EAAElB,IAAI,GAAGA,IAAI,CAACmB,KAAR,GAAgB;AADxB;AADX,WAJJ,EAUGC,IAVH,CAUSC,GAAD,IAAS;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;AACAtB,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,YAAAA,gBAAgB,CAACkB,IAAjB,CAAsBH,GAAG,CAACI,IAA1B;AAEA3B,YAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaU,cAAAA,MAAM,EAAED;AAArB,aAAD,CAAT;AACD,WAhBH,EAiBGoB,KAjBH,CAiBUC,GAAD,IAAS;AACd5B,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAuB,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCI,GAArC;AACD,WApBH;AAqBD,SA9BH,EA+BE,QA/BF;AAiCD;AACF,KA3CgC,CA4CjC;AACA;;AACD,GA9CD;;AAgDA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,MAAM,EAAC,UAJT;AAKE,IAAA,QAAQ,EAAEzB,mBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAcD,CAjED;;AAmEA,eAAeN,UAAf","sourcesContent":["import React from \"react\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FileUpload = ({ values, setValues, setLoading }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const fileUploadAndResize = (e) => {\r\n    // console.log(e.target.files);\r\n    // resize\r\n    let files = e.target.files; // 3\r\n    let allUploadedFiles = values.images;\r\n\r\n    if (files) {\r\n      setLoading(true);\r\n      for (let i = 0; i < files.length; i++) {\r\n        Resizer.imageFileResizer(\r\n          files[i],\r\n          720,\r\n          720,\r\n          \"JPEG\",\r\n          100,\r\n          0,\r\n          (uri) => {\r\n            // console.log(uri);\r\n            axios\r\n              .post(\r\n                `${process.env.REACT_APP_API}/uploadimages`,\r\n                { image: uri },\r\n                {\r\n                  headers: {\r\n                    authtoken: user ? user.token : \"\",\r\n                  },\r\n                }\r\n              )\r\n              .then((res) => {\r\n                console.log(\"IMAGE UPLOAD RES DATA\", res);\r\n                setLoading(false);\r\n                allUploadedFiles.push(res.data);\r\n\r\n                setValues({ ...values, images: allUploadedFiles });\r\n              })\r\n              .catch((err) => {\r\n                setLoading(false);\r\n                console.log(\"CLOUDINARY UPLOAD ERR\", err);\r\n              });\r\n          },\r\n          \"base64\"\r\n        );\r\n      }\r\n    }\r\n    // send back to server to upload to cloudinary\r\n    // set url to images[] in the parent component state - ProductCreate\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <label className=\"btn btn-primary\">\r\n        Choose File\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          hidden\r\n          accept=\"images/*\"\r\n          onChange={fileUploadAndResize}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}