{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\pages\\\\category\\\\CategoryHome.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getCategory } from '../../functions/category';\nimport { Link } from 'react-router-dom';\nimport ProductCard from '../../components/cards/ProductCard';\n/* Needed to grab the slug from the url, in order to do so, the \r\ncode uses match which is deconstructed from react router props. */\n\nconst CategoryHome = ({\n  match\n}) => {\n  /* State variables, single category can be left as useState({}). \r\n  The next bit of code sought after is the list of products that \r\n  is within the single category that was sought after. */\n  const [category, setCategory] = useState({});\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  /* De-structured slug so that it is easier to use.  */\n\n  const {\n    slug\n  } = match.params;\n  /* When the component mounts, the code needs to make a\r\n  request to the single category. */\n\n  useEffect(() => {\n    setLoading(true);\n    /* Backend does not know which category the frontend wants\r\n     */\n\n    getCategory(slug).then(c => {\n      console.log(JSON.stringify(c.data, null, 4));\n      setCategory(c.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, slug));\n};\n\nexport default CategoryHome;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/pages/category/CategoryHome.js"],"names":["React","useState","useEffect","getCategory","Link","ProductCard","CategoryHome","match","category","setCategory","products","setProducts","loading","setLoading","slug","params","then","c","console","log","JSON","stringify","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC9B;;;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA;;AACA,QAAM;AAACa,IAAAA;AAAD,MAASP,KAAK,CAACQ,MAArB;AAEA;;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA;;;AAEAV,IAAAA,WAAW,CAACW,IAAD,CAAX,CACCE,IADD,CACMC,CAAC,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,CAAC,CAACK,IAAjB,EAAuB,IAAvB,EAA6B,CAA7B,CAAZ;AACAb,MAAAA,WAAW,CAACQ,CAAC,CAACK,IAAH,CAAX;AACH,KAJD;AAKH,GATQ,EASN,EATM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,IAAJ,CADJ,CADJ;AAKH,CA7BD;;AA8BA,eAAeR,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {getCategory} from '../../functions/category';\r\nimport {Link} from 'react-router-dom';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\n\r\n/* Needed to grab the slug from the url, in order to do so, the \r\ncode uses match which is deconstructed from react router props. */\r\nconst CategoryHome = ({match}) => {\r\n    /* State variables, single category can be left as useState({}). \r\n    The next bit of code sought after is the list of products that \r\n    is within the single category that was sought after. */\r\n    const [category, setCategory] = useState({});\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    /* De-structured slug so that it is easier to use.  */\r\n    const {slug} = match.params;\r\n\r\n    /* When the component mounts, the code needs to make a\r\n    request to the single category. */\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        /* Backend does not know which category the frontend wants\r\n         */\r\n        getCategory(slug)\r\n        .then(c => {\r\n            console.log(JSON.stringify(c.data, null, 4));\r\n            setCategory(c.data);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <p>{slug}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default CategoryHome;"]},"metadata":{},"sourceType":"module"}