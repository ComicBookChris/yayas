{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\pages\\\\admin\\\\category\\\\CategoryUpdate.js\";\nimport React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getCategory, updateCategory } from '../../../functions/category';\nimport CategoryForm from '../../../components/forms/CategoryForm';\n\nconst CategoryUpdate = ({\n  history,\n  match\n}) => {\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // console.log(match);\n    loadCategory();\n  }, [load]);\n\n  const loadCategory = () => getCategory(match.params.slug).then(c => setName(c.data.name));\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(name);\n\n    setLoading(true);\n    updateCategory(match.params.slug, {\n      name\n    }, user.token).then(res => {\n      // console.log(res)\n      setLoading(false);\n      setName(\"\");\n      toast.success(`\"${res.data.name}\" is updated`);\n      history.push('/admin/category');\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      if (err.response.status === 400) toast.error(err.response.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdminNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }\n  }, \"Update category\"), /*#__PURE__*/React.createElement(CategoryForm, {\n    handleSubmit: handleSubmit,\n    name: name,\n    setName: setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CategoryUpdate;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/pages/admin/category/CategoryUpdate.js"],"names":["React","useState","useEffect","AdminNav","toast","useSelector","getCategory","updateCategory","CategoryForm","CategoryUpdate","history","match","user","state","name","setName","loading","setLoading","loadCategory","load","params","slug","then","c","data","handleSubmit","e","preventDefault","token","res","success","push","catch","err","console","log","response","status","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCategory, updateCategory } from '../../../functions/category';\r\nimport CategoryForm from '../../../components/forms/CategoryForm';\r\n\r\nconst CategoryUpdate = ({ history, match }) => {\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // console.log(match);\r\n        loadCategory();\r\n    }, [load]);\r\n\r\n    const loadCategory = () =>\r\n        getCategory(match.params.slug).then((c) => setName(c.data.name));\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(name);\r\n        setLoading(true);\r\n        updateCategory(match.params.slug, { name }, user.token)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setLoading(false);\r\n                setName(\"\");\r\n                toast.success(`\"${res.data.name}\" is updated`);\r\n                history.push('/admin/category');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                if (err.response.status === 400) toast.error(err.response.data);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                        ? (<h4 className=\"text-danger\">Loading...</h4>)\r\n                        : (<h4>Update category</h4>)\r\n                    }\r\n\r\n                    <CategoryForm \r\n                        handleSubmit={handleSubmit}\r\n                        name={name}\r\n                        setName={setName}\r\n                    />\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryUpdate;"]},"metadata":{},"sourceType":"module"}