{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\components\\\\cards\\\\ProductCardInCheckout.js\";\nimport React from 'react';\nimport ModalImage from \"react-modal-image\";\nimport Yayas from '../../images/yayas.png';\nimport { useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons';\n\nconst ProductCardInCheckout = ({\n  p\n}) => {\n  // const colors = ['Black', 'Brown', 'Silver', 'White', 'Blue'];\n  let dispatch = useDispatch(); // const handleColorChange = e => {\n  //     // console.log(\"color changed\", e.target.value);\n  //     let cart = []\n  //     if (typeof window !== 'undefined') {\n  //         if (localStorage.getItem(\"cart\")) {\n  //             cart = JSON.parse(localStorage.getItem(\"cart\"));\n  //         }\n  //         cart.map((product, i) => {\n  //             if (product._id === p._id) {\n  //                 cart[i].color = e.target.value;\n  //             }\n  //         });\n  //         // console.log('cart update color', cart);\n  //         localStorage.setItem('cart', JSON.stringify(cart));\n  //         dispatch({\n  //             type: \"ADD_TO_CART\",\n  //             payload: cart,\n  //         });\n  //     }\n  // };\n\n  const handleQuantityChange = e => {\n    // console.log(\"available quantity\", p.quantity);\n    let count = e.target.value < 1 ? 1 : e.target.value;\n\n    if (count > p.quantity) {\n      toast.error(`Max available quantity: ${p.quantity}`);\n      return;\n    }\n\n    let cart = [];\n\n    if (typeof window !== 'undefined') {\n      if (localStorage.getItem('cart')) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((product, i) => {\n        if (product._id === p._id) {\n          cart[i].count = count;\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart\n      });\n    }\n  };\n\n  const handleRemove = () => {\n    // console.log(p._id, \"to remove\");\n    let cart = [];\n\n    if (typeof window !== 'undefined') {\n      if (localStorage.getItem('cart')) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((product, i) => {\n        if (product._id === p._id) {\n          cart.splice(i, 1);\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, p.images.length ? /*#__PURE__*/React.createElement(ModalImage, {\n    small: p.images[0].url,\n    large: p.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(ModalImage, {\n    small: Yayas,\n    large: Yayas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 32\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, p.title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"$\", p.price), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    value: p.count,\n    onChange: handleQuantityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, p.shipping === \"Yes\" ? /*#__PURE__*/React.createElement(CheckCircleOutlined, {\n    className: \"text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    className: \"text-danger text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    onClick: handleRemove,\n    className: \"text-danger pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ProductCardInCheckout;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/components/cards/ProductCardInCheckout.js"],"names":["React","ModalImage","Yayas","useDispatch","toast","CheckCircleOutlined","CloseCircleOutlined","CloseOutlined","ProductCardInCheckout","p","dispatch","handleQuantityChange","e","count","target","value","quantity","error","cart","window","localStorage","getItem","JSON","parse","map","product","i","_id","setItem","stringify","type","payload","handleRemove","splice","width","height","images","length","url","title","price","shipping"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ModalImage from \"react-modal-image\";\r\nimport Yayas from '../../images/yayas.png';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from 'react-toastify';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons';\r\n\r\nconst ProductCardInCheckout = ({ p }) => {\r\n    // const colors = ['Black', 'Brown', 'Silver', 'White', 'Blue'];\r\n    let dispatch = useDispatch();\r\n\r\n    // const handleColorChange = e => {\r\n    //     // console.log(\"color changed\", e.target.value);\r\n\r\n    //     let cart = []\r\n    //     if (typeof window !== 'undefined') {\r\n    //         if (localStorage.getItem(\"cart\")) {\r\n    //             cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    //         }\r\n\r\n    //         cart.map((product, i) => {\r\n    //             if (product._id === p._id) {\r\n    //                 cart[i].color = e.target.value;\r\n    //             }\r\n    //         });\r\n\r\n    //         // console.log('cart update color', cart);\r\n    //         localStorage.setItem('cart', JSON.stringify(cart));\r\n    //         dispatch({\r\n    //             type: \"ADD_TO_CART\",\r\n    //             payload: cart,\r\n    //         });\r\n    //     }\r\n    // };\r\n\r\n    const handleQuantityChange = e => {\r\n        // console.log(\"available quantity\", p.quantity);\r\n\r\n        let count = e.target.value < 1 ? 1 : e.target.value;\r\n\r\n        if (count > p.quantity) {\r\n            toast.error(`Max available quantity: ${p.quantity}`);\r\n            return;\r\n        }\r\n\r\n        let cart = [];\r\n\r\n        if (typeof window !== 'undefined') {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart[i].count = count;\r\n                }\r\n            });\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemove = () => {\r\n        // console.log(p._id, \"to remove\");\r\n        let cart = [];\r\n\r\n        if (typeof window !== 'undefined') {\r\n            if (localStorage.getItem('cart')) {\r\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            }\r\n\r\n            cart.map((product, i) => {\r\n                if (product._id === p._id) {\r\n                    cart.splice(i, 1);\r\n                }\r\n            });\r\n\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n            dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: cart,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <div style={{ width: \"100px\", height: \"auto\" }}>\r\n                        {p.images.length\r\n                            ? (<ModalImage small={p.images[0].url} large={p.images[0].url} />)\r\n                            : (<ModalImage small={Yayas} large={Yayas} />)\r\n                        }\r\n                    </div>\r\n                </td>\r\n                <td>{p.title}</td>\r\n                <td>${p.price}</td>\r\n                {/* <td>{p.brand}</td> */}\r\n                {/* <td>\r\n                    <select onChange={handleColorChange} name=\"color\" className=\"form-control\">\r\n                        {p.color\r\n                            ? <option value={p.color}>{p.color}</option>\r\n                            : <option>Select</option>\r\n                        }\r\n                        {colors\r\n                            .filter((c) => c !== p.color)\r\n                            .map((c) => (\r\n                                <option key={c} value={c}>\r\n                                    {c}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </td> */}\r\n                <td className=\"text-center\">\r\n                    <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={p.count}\r\n                        onChange={handleQuantityChange}\r\n                    />\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {p.shipping === \"Yes\" \r\n                    ? (<CheckCircleOutlined className=\"text-success\" />)\r\n                    : (<CloseCircleOutlined className=\"text-danger text-center\" />)\r\n                    }\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <CloseOutlined onClick={handleRemove} className=\"text-danger pointer\" />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default ProductCardInCheckout;\r\n"]},"metadata":{},"sourceType":"module"}