{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\components\\\\StripeCheckout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPaymentIntent } from '../functions/stripe';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'antd';\nimport { DollarOutlined, CheckOutlined } from '@ant-design/icons';\nimport Yayas from '../images/yayas.png';\nimport { createOrder, emptyUserCart } from '../functions/user';\nimport \"./stripeCheckout.css\";\n\nconst StripeCheckout = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const {\n    user,\n    coupon\n  } = useSelector(state => ({ ...state\n  }));\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const [cartTotal, setCartTotal] = useState(0);\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\n  const [payable, setPayable] = useState(0);\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    createPaymentIntent(user.token, coupon).then(res => {\n      console.log(\"create payment intent\", res.data);\n      setClientSecret(res.data.clientSecret); // additional response received on successful payment\n\n      setCartTotal(res.data.cartTotal);\n      setTotalAfterDiscount(res.data.totalAfterDiscount);\n      setPayable(res.data.payable);\n    });\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: e.target.name.value\n        }\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      // here you get result after successful payment\n      // create order and save in database for admin to process\n      createOrder(payload, user.token).then(res => {\n        if (res.data.ok) {\n          // empty cart from local storage\n          if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\"); // empty cart from redux\n\n          dispatch({\n            type: \"ADD_TO_CART\",\n            payload: []\n          }); // reset coupon to false\n\n          dispatch({\n            type: \"COUPON_APPLIED\",\n            payload: false\n          }); // empty cart from database\n\n          emptyUserCart(user.token);\n        }\n      }); // empty user cart from redux store and local storage\n\n      console.log(JSON.stringify(payload, null, 4));\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  const handleChange = async e => {\n    // listen for changes in the card element\n    // and display any errors as the custoemr types their card details\n    setDisabled(e.empty); // disable pay button if errors\n\n    setError(e.error ? e.error.message : \"\"); // show error message\n  };\n\n  const cartStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !succeeded && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, coupon && totalAfterDiscount !== undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, `Total after discount: $${totalAfterDiscount}`) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"No coupon applied\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    cover: /*#__PURE__*/React.createElement(\"img\", {\n      src: Yayas,\n      style: {\n        height: \"200px\",\n        objectFit: \"cover\",\n        marginBottom: \"-50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }),\n    actions: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DollarOutlined, {\n      className: \"text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 60\n      }\n    }), \" Total: $\", cartTotal), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CheckOutlined, {\n      className: \"text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 59\n      }\n    }), \" Total payable : $\", (payable / 100).toFixed(2))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    className: \"stripe-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    id: \"card-element\",\n    options: cartStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"stripe-button\",\n    disabled: processing || disabled || succeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 31\n    }\n  }) : \"Pay\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: succeeded ? \"result-message\" : \"result-message hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Payment Successful.\", \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/user/history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"See it in your purchase history.\"))));\n};\n\nexport default StripeCheckout;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/components/StripeCheckout.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","useSelector","useDispatch","createPaymentIntent","Link","Card","DollarOutlined","CheckOutlined","Yayas","createOrder","emptyUserCart","StripeCheckout","history","dispatch","user","coupon","state","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","cartTotal","setCartTotal","totalAfterDiscount","setTotalAfterDiscount","payable","setPayable","stripe","elements","token","then","res","console","log","data","handleSubmit","e","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","billing_details","name","target","value","message","ok","window","localStorage","removeItem","type","JSON","stringify","handleChange","empty","cartStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","undefined","height","objectFit","marginBottom","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPaymentIntent } from '../functions/stripe';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card } from 'antd';\r\nimport { DollarOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport Yayas from '../images/yayas.png';\r\n\r\nimport { createOrder, emptyUserCart } from '../functions/user';\r\n\r\nimport \"./stripeCheckout.css\";\r\n\r\nconst StripeCheckout = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { user, coupon } = useSelector((state) => ({ ...state }));\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n\r\n    const [cartTotal, setCartTotal] = useState(0);\r\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n    const [payable, setPayable] = useState(0);\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        createPaymentIntent(user.token, coupon).then((res) => {\r\n          console.log(\"create payment intent\", res.data);\r\n          setClientSecret(res.data.clientSecret);\r\n          // additional response received on successful payment\r\n          setCartTotal(res.data.cartTotal);\r\n          setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n          setPayable(res.data.payable);\r\n        });\r\n      }, []);\r\n    \r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setProcessing(true);\r\n    \r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n          payment_method: {\r\n            card: elements.getElement(CardElement),\r\n            billing_details: {\r\n              name: e.target.name.value,\r\n            },\r\n          },\r\n        });\r\n    \r\n        if (payload.error) {\r\n          setError(`Payment failed ${payload.error.message}`);\r\n          setProcessing(false);\r\n        } else {\r\n          // here you get result after successful payment\r\n          // create order and save in database for admin to process\r\n          createOrder(payload, user.token).then((res) => {\r\n            if (res.data.ok) {\r\n              // empty cart from local storage\r\n              if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\r\n              // empty cart from redux\r\n              dispatch({\r\n                type: \"ADD_TO_CART\",\r\n                payload: [],\r\n              });\r\n              // reset coupon to false\r\n              dispatch({\r\n                type: \"COUPON_APPLIED\",\r\n                payload: false,\r\n              });\r\n              // empty cart from database\r\n              emptyUserCart(user.token);\r\n            }\r\n          });\r\n          // empty user cart from redux store and local storage\r\n          console.log(JSON.stringify(payload, null, 4));\r\n          setError(null);\r\n          setProcessing(false);\r\n          setSucceeded(true);\r\n        }\r\n      };\r\n    \r\n      const handleChange = async (e) => {\r\n        // listen for changes in the card element\r\n        // and display any errors as the custoemr types their card details\r\n        setDisabled(e.empty); // disable pay button if errors\r\n        setError(e.error ? e.error.message : \"\"); // show error message\r\n      };\r\n    \r\n      const cartStyle = {\r\n        style: {\r\n          base: {\r\n            color: \"#32325d\",\r\n            fontFamily: \"Arial, sans-serif\",\r\n            fontSmoothing: \"antialiased\",\r\n            fontSize: \"16px\",\r\n            \"::placeholder\": {\r\n              color: \"#32325d\",\r\n            },\r\n          },\r\n          invalid: {\r\n            color: \"#fa755a\",\r\n            iconColor: \"#fa755a\",\r\n          },\r\n        },\r\n      };\r\n    \r\n      return (\r\n        <>\r\n          {!succeeded && (\r\n            <div>\r\n              {coupon && totalAfterDiscount !== undefined ? (\r\n                <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\r\n              ) : (\r\n                <p className=\"alert alert-danger\">No coupon applied</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"text-center pb-5\">\r\n            <Card\r\n              cover={\r\n                <img\r\n                  src={Yayas}\r\n                  style={{\r\n                    height: \"200px\",\r\n                    objectFit: \"cover\",\r\n                    marginBottom: \"-50px\",\r\n                  }}\r\n                />\r\n              }\r\n              actions={[\r\n                <>\r\n                  <DollarOutlined className=\"text-info\" /> <br /> Total: $\r\n                  {cartTotal}\r\n                </>,\r\n                <>\r\n                  <CheckOutlined className=\"text-info\" /> <br /> Total payable : $\r\n                  {(payable / 100).toFixed(2)}\r\n                </>,\r\n              ]}\r\n            />\r\n          </div>\r\n    \r\n          <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\r\n            <CardElement\r\n              id=\"card-element\"\r\n              options={cartStyle}\r\n              onChange={handleChange}\r\n            />\r\n            <button\r\n              className=\"stripe-button\"\r\n              disabled={processing || disabled || succeeded}\r\n            >\r\n              <span id=\"button-text\">\r\n                {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\r\n              </span>\r\n            </button>\r\n            <br />\r\n            {error && (\r\n              <div className=\"card-error\" role=\"alert\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <br />\r\n            <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n              Payment Successful.{\" \"}\r\n              <Link to=\"/user/history\">See it in your purchase history.</Link>\r\n            </p>\r\n          </form>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    export default StripeCheckout;"]},"metadata":{},"sourceType":"module"}