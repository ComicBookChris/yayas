{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\pages\\\\auth\\\\RegisterComplete.js\";\nimport React, { useState, useEffect } from 'react';\nimport { auth } from '..//../firebase';\nimport { toast } from 'react-toastify';\n\nconst RegisterComplete = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  /**useEffect will populate the email, within \r\n   * the const state about. \r\n   * 1st argument is an arrow function\r\n   * and 2nd argument is dependencies.\r\n   * This is known as a dependecy array.\r\n   * At the moment it is empty by default.\r\n   *  As an example, [password] was inside \r\n   * brackets, when it changes,\r\n   * the function will run.\r\n    */\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem('emailForRegistration')); // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      /**signInWithEmailLink needs two arguments, email, because\r\n       * which email? and the 2nd arguement is the entire url.\r\n       * To get this use window.location.href\r\n       */\n      const result = await auth.signInWithEmailLink(email, window.location.href); // console.log('RESULT', result)\n\n      if (result.user.emailVerified) {\n        //remove user email from the local storage\n        window.localStorage.removeItem('emailForRegistration'); //get user id token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); //redux store\n\n        console. //redirect\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Enter Password\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Complete Registration\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Register Complete\"), completeRegistrationForm())));\n};\n\nexport default RegisterComplete;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","RegisterComplete","history","email","setEmail","password","setPassword","window","localStorage","getItem","handleSubmit","e","preventDefault","result","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","console","push","error","log","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from '..//../firebase';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst RegisterComplete = ({history}) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    /**useEffect will populate the email, within \r\n     * the const state about. \r\n     * 1st argument is an arrow function\r\n     * and 2nd argument is dependencies.\r\n     * This is known as a dependecy array.\r\n     * At the moment it is empty by default.\r\n     *  As an example, [password] was inside \r\n     * brackets, when it changes,\r\n     * the function will run.\r\n      */\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem('emailForRegistration'));\r\n        // console.log(window.location.href);\r\n        // console.log(window.localStorage.getItem(\"emailForRegistration\"));\r\n    }, [])\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            /**signInWithEmailLink needs two arguments, email, because\r\n             * which email? and the 2nd arguement is the entire url.\r\n             * To get this use window.location.href\r\n             */\r\n            const result = await auth.signInWithEmailLink(\r\n                email, \r\n                window.location.href\r\n            );\r\n            // console.log('RESULT', result)\r\n            if(result.user.emailVerified) {\r\n                //remove user email from the local storage\r\n                window.localStorage.removeItem('emailForRegistration');\r\n                //get user id token\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password);\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                //redux store\r\n                console.\r\n                //redirect\r\n                history.push('/')\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n        }\r\n    };\r\n\r\n    const completeRegistrationForm = () => \r\n    <form onSubmit={handleSubmit}>\r\n        <input \r\n        type=\"email\" \r\n        className=\"form-control\" \r\n        value={email} \r\n        disabled\r\n        />\r\n\r\n        <input \r\n        type=\"password\" \r\n        className=\"form-control\" \r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Enter Password\"\r\n        autoFocus\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-raised\">\r\n        Complete Registration\r\n        </button>\r\n    </form>    \r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h4>Register Complete</h4>\r\n                    {completeRegistrationForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}