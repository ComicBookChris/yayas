{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\components\\\\forms\\\\FileUpload.js\";\nimport React from 'react';\nimport Resizer from 'react-image-file-resizer';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nconst FileUpload = ({\n  values,\n  setValues,\n  setLoading\n}) => {\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n\n  const fileUploadAndResize = e => {\n    // console.log(e.target.files);\n    // resize\n    let files = e.target.files;\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      setLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, 'JPEG', 100, 0, uri => {\n          console.log(uri);\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              authtoken: user ? user.token : \"\"\n            }\n          }).then(res => {\n            console.log('IMAGE UPLOAD RES DATA', res);\n            setLoading(false);\n            allUploadedFiles.push(res.data);\n            setValues({ ...values,\n              images: allUploadedFiles\n            });\n          }).catch(err => {\n            setLoading(false);\n            console.log('CLOUDINARY UPLOAD ERROR', err);\n          });\n        }, 'base64');\n      }\n    } // send back to server to upload to cloudinary\n    // set url to images[] in the parent component - ProductCreate\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary btn-raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Choose File\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    accept: \"images/*\",\n    onChange: fileUploadAndResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/components/forms/FileUpload.js"],"names":["React","Resizer","axios","useSelector","FileUpload","values","setValues","setLoading","user","state","fileUploadAndResize","e","files","target","allUploadedFiles","images","i","length","imageFileResizer","uri","console","log","post","process","env","REACT_APP_API","image","headers","authtoken","token","then","res","push","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAEpD,QAAM;AAACC,IAAAA;AAAD,MAASL,WAAW,CAAEM,KAAD,KAAY,EAAC,GAAGA;AAAJ,GAAZ,CAAD,CAA1B;;AAEA,QAAMC,mBAAmB,GAAIC,CAAD,IAAO;AAC/B;AACA;AACA,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AAEA,QAAIE,gBAAgB,GAAGT,MAAM,CAACU,MAA9B;;AAEA,QAAGH,KAAH,EAAU;AACNL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCf,QAAAA,OAAO,CAACiB,gBAAR,CACIN,KAAK,CAACI,CAAD,CADT,EAEI,GAFJ,EAGI,GAHJ,EAII,MAJJ,EAKI,GALJ,EAMI,CANJ,EAOKG,GAAD,IAAS;AACTC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAjB,UAAAA,KAAK,CAACoB,IAAN,CACK,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,eADjC,EAEI;AAACC,YAAAA,KAAK,EAAEP;AAAR,WAFJ,EAGI;AACAQ,YAAAA,OAAO,EAAE;AACLC,cAAAA,SAAS,EAAEpB,IAAI,GAAGA,IAAI,CAACqB,KAAR,GAAgB;AAD1B;AADT,WAHJ,EASCC,IATD,CASMC,GAAG,IAAI;AACTX,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCU,GAArC;AACAxB,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAO,YAAAA,gBAAgB,CAACkB,IAAjB,CAAsBD,GAAG,CAACE,IAA1B;AAEA3B,YAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYU,cAAAA,MAAM,EAAED;AAApB,aAAD,CAAT;AACH,WAfD,EAgBCoB,KAhBD,CAgBOC,GAAG,IAAI;AACV5B,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCc,GAAvC;AACH,WAnBD;AAoBC,SA7BL,EA8BI,QA9BJ;AAgCH;AACJ,KA3C8B,CA4C/B;AACA;;AACH,GA9CD;;AAgDA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEA;AACQ,IAAA,IAAI,EAAC,MADb;AAEQ,IAAA,QAAQ,MAFhB;AAGQ,IAAA,MAAM,MAHd;AAIQ,IAAA,MAAM,EAAC,UAJf;AAKQ,IAAA,QAAQ,EAAEzB,mBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,CADJ;AAcH,CAlED;;AAoEA,eAAeN,UAAf","sourcesContent":["import React from 'react';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst FileUpload = ({values, setValues, setLoading}) => {\r\n\r\n    const {user} = useSelector((state) => ({...state}));\r\n\r\n    const fileUploadAndResize = (e) => {\r\n        // console.log(e.target.files);\r\n        // resize\r\n        let files = e.target.files;\r\n\r\n        let allUploadedFiles = values.images;\r\n\r\n        if(files) {\r\n            setLoading(true);\r\n            for (let i = 0; i < files.length; i++) {\r\n                Resizer.imageFileResizer(\r\n                    files[i], \r\n                    720, \r\n                    720, \r\n                    'JPEG', \r\n                    100, \r\n                    0, \r\n                    (uri) => {\r\n                    console.log(uri);\r\n                    axios.post(\r\n                        `${process.env.REACT_APP_API}/uploadimages`, \r\n                        {image: uri}, \r\n                        {\r\n                        headers: {\r\n                            authtoken: user ? user.token : \"\",\r\n                        }\r\n                        }\r\n                    )\r\n                    .then(res => {\r\n                        console.log('IMAGE UPLOAD RES DATA', res);\r\n                        setLoading(false);\r\n                        allUploadedFiles.push(res.data);\r\n\r\n                        setValues({...values, images: allUploadedFiles});\r\n                    })\r\n                    .catch(err => {\r\n                        setLoading(false);\r\n                        console.log('CLOUDINARY UPLOAD ERROR', err);\r\n                    });\r\n                    }, \r\n                    'base64'\r\n                    );\r\n            }\r\n        }\r\n        // send back to server to upload to cloudinary\r\n        // set url to images[] in the parent component - ProductCreate\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <label className=\"btn btn-primary btn-raised\">\r\n                Choose File\r\n            <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    hidden\r\n                    accept=\"images/*\"\r\n                    onChange={fileUploadAndResize}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}