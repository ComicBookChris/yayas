{"ast":null,"code":"var _jsxFileName = \"C:\\\\e_commerce_project\\\\yayas\\\\client\\\\src\\\\components\\\\modal\\\\RatingModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { StarOutlined } from '@ant-design/icons';\nimport { useHistory, useParams } from 'react-router-dom';\n/* When this component wraps StarRating in SingleProduct.js\r\nThe entire content in that wrap is given to this component as \r\n children props */\n\nconst RatingModal = ({\n  children\n}) => {\n  /* Destruct user from useSelector, useSelector takes a function.\r\n  The function wants to access the state. Don't want all the state, \r\n  so spread the state to just access the user. */\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  /* modalVisible is used to control the visibility of the modal, \r\n  when to show, when to hide. When visible is false, it is hidden */\n\n  const [modalVisible, setModalVisible] = useState(false);\n  /* useHistory is used so that handleModal has access to history. */\n\n  let history = useHistory();\n  let params = useParams();\n  console.log();\n  /* In handleModal, first check if the user is present. \r\n  The visibility will be contingent if a user is present.\r\n  If no user present, takes the new user to the login page*/\n\n  const handleModal = () => {\n    if (user && user.token) {\n      setModalVisible(true);\n    } else {\n      history.push({\n        pathname: '/login',\n        state: {\n          from: `/product/${slug}`\n        }\n      });\n    }\n  };\n  /* return the modal, and the modal's content will be the \r\n  children's props, which will be the actual StarRating */\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StarOutlined, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), \" \", user ? \"Leave rating\" : \"Login to leave rating\"), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Leave your rating\",\n    centered: true,\n    visible: modalVisible,\n    onOk: () => {\n      setModalVisible(false);\n      toast.success(\"Thanks for your review. It will show soon\");\n    },\n    onCancel: () => setModalVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nexport default RatingModal;","map":{"version":3,"sources":["C:/e_commerce_project/yayas/client/src/components/modal/RatingModal.js"],"names":["React","useState","Modal","Button","toast","useSelector","StarOutlined","useHistory","useParams","RatingModal","children","user","state","modalVisible","setModalVisible","history","params","console","log","handleModal","token","push","pathname","from","slug","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AAEA;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC;;;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,WAAW,CAAEO,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AACA;;;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;AACA;;AACA,MAAIc,OAAO,GAAGR,UAAU,EAAxB;AACA,MAAIS,MAAM,GAAGR,SAAS,EAAtB;AAEIS,EAAAA,OAAO,CAACC,GAAR;AAEJ;;;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIR,IAAI,IAAIA,IAAI,CAACS,KAAjB,EAAwB;AACpBN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACM,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,QADD;AAETV,QAAAA,KAAK,EAAE;AAACW,UAAAA,IAAI,EAAG,YAAWC,IAAK;AAAxB;AAFE,OAAb;AAIH;AACJ,GATD;AAUA;;;;AAEA,sBACI,uDACI;AAAK,IAAA,OAAO,EAAEL,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAEW,GAFX,EAGKR,IAAI,GAAG,cAAH,GAAoB,uBAH7B,CADJ,eAMI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,OAAO,EAAEE,YAHb;AAII,IAAA,IAAI,EAAE,MAAM;AACRC,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAV,MAAAA,KAAK,CAACqB,OAAN,CAAc,2CAAd;AACH,KAPL;AAQI,IAAA,QAAQ,EAAE,MAAMX,eAAe,CAAC,KAAD,CARnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEJ,QATF,CANJ,CADJ;AAmBH,CAhDD;;AAkDA,eAAeD,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n/* When this component wraps StarRating in SingleProduct.js\r\nThe entire content in that wrap is given to this component as \r\n children props */\r\nconst RatingModal = ({ children }) => {\r\n    /* Destruct user from useSelector, useSelector takes a function.\r\n    The function wants to access the state. Don't want all the state, \r\n    so spread the state to just access the user. */\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    /* modalVisible is used to control the visibility of the modal, \r\n    when to show, when to hide. When visible is false, it is hidden */\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    /* useHistory is used so that handleModal has access to history. */\r\n    let history = useHistory();\r\n    let params = useParams();\r\n\r\n        console.log()\r\n\r\n    /* In handleModal, first check if the user is present. \r\n    The visibility will be contingent if a user is present.\r\n    If no user present, takes the new user to the login page*/\r\n    const handleModal = () => {\r\n        if (user && user.token) {\r\n            setModalVisible(true);\r\n        } else {\r\n            history.push({\r\n                pathname: '/login',\r\n                state: {from: `/product/${slug}`}\r\n            });\r\n        }\r\n    };\r\n    /* return the modal, and the modal's content will be the \r\n    children's props, which will be the actual StarRating */\r\n    return (\r\n        <>\r\n            <div onClick={handleModal}>\r\n                <StarOutlined className=\"text-danger\" />\r\n                <br />{\" \"}\r\n                {user ? \"Leave rating\" : \"Login to leave rating\"}\r\n            </div>\r\n            <Modal\r\n                title=\"Leave your rating\"\r\n                centered\r\n                visible={modalVisible}\r\n                onOk={() => {\r\n                    setModalVisible(false);\r\n                    toast.success(\"Thanks for your review. It will show soon\");\r\n                }}\r\n                onCancel={() => setModalVisible(false)}\r\n            >{children}</Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RatingModal;"]},"metadata":{},"sourceType":"module"}